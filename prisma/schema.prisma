// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../lib/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  name        String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  reflections Reflection[]

  @@map("users")
}

model Reflection {
  id        String   @id @default(cuid())
  date      DateTime
  mood      String    // Store the emoji as a string
  content   String    // Long text content
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  tags      ReflectionTag[]

  @@index([userId])
  @@index([date])
  @@map("reflections")
}

model Tag {
  id          String          @id @default(cuid())
  name        String          @unique
  createdAt   DateTime        @default(now())
  reflections ReflectionTag[]

  @@map("tags")
}

model ReflectionTag {
  reflection    Reflection @relation(fields: [reflectionId], references: [id], onDelete: Cascade)
  reflectionId  String
  tag           Tag        @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId         String
  assignedAt    DateTime   @default(now())

  @@id([reflectionId, tagId])
  @@index([reflectionId])
  @@index([tagId])
  @@map("reflection_tags")
}
